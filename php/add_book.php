<?
	# If user is logged in, user id is stored in $_SESSION['id']
	# add_book_to_db may need to be updated to both add the book
	# to the books table and create an initial event in the events
	# table.
?>

<div class="smallHeaderText">Add a book</div>
<hr/>

<?php
# Constants for the code below.  Some of these might be overkill...
$yes_button_label = "Yes";
$no_button_label = " No ";
$add_command = "add";
$search_command = "search";
$confirm_command = "confirm";
$location_command = "location";
$description_command = "description";

# If an ISBN number was provided, attempt to look up the book.
# If search on the ISBN doesn't return a result, the book
# constructor throws an exception.
if (isset($_REQUEST['isbn']))
{
	$isbn = $_REQUEST["isbn"];
	try
	{ 
		$result_book = new isbn_title($isbn);
	}
	catch (Exception $e)
	{
		# Failure.  Set the result to NULL to indicate this.
		$result_book = NULL;
	}
}

# The $isbn variable contains exactly what the user passed in
# and may not be a valid isbn for the purposes of Amazon Web
# Services or our database.  Even if it leads to a successful
# search, it may contain dashes and whitespace that the book
# constructor removes.  $result_book->isbn is the processed
# version of $isbn and is guaranteed to be valid.  This is
# what we should use to get the isbn from now on.  So, we
# unset $isbn to be sure it won't be accidentally used.
if (isset($isbn))
{
	unset($isbn);
}

# When $result_book is not NULL, the search succeeded.  When
# the cgi variable action is set to "confirm", we display a
# page asking the user to confirm that the book we found is
# the one they intended.
if($result_book && $_REQUEST["action"] == $confirm_command)
{
?>
<br>
<table>
	<tr>
		<td style="width:50%; padding-left:0px;">
			<table>
				<tr>
					<td style="padding-left:0px;">
						<img class="bookImage" src="<?php echo $result_book->image_url?>" alt="Book image"/>
					</td>
					<td style="padding-left:10px; text-align:left; vertical-align:top;">
						<i><?php echo $result_book->title?></i>
						<br/><br/>
						<?php echo $result_book->author?>
					</td>
				</tr>
			</table>
		</td>
		<td style="text-align:right;">
			Is&nbsp;this&nbsp;the&nbsp;book&nbsp;you&nbsp;were&nbsp;looking&nbsp;for?
			<!-- 	This form contains two submit buttons (which is why the
					buttons need to be named).  The "yes" button confirms the 
					search result and adds the book.  The "no" button takes the
					user back to the search page. -->
			<form action="add_book.php" method="post">
				<?php
					# Note that we use $result_book->isbn and _not_ $isbn.
					# The former is guaranteed to be valid because it has been
					# processed by the book constructor.  The latter may not
					# be valid.  In fact, we unset $isbn above so it _can't_
					# be used.
				?>
				<input type="hidden" name="isbn" value="<?php echo $result_book->isbn;?>"/>
				<input type="hidden" name="action" value="<?php echo $add_command;?>"/>
				<br>
				<input type="submit" name="submit" value="<?php echo $yes_button_label;?>"/>
				&nbsp;
				<input type="submit" name="submit" value="<?php echo $no_button_label;?>"/>
			</form>
		</td>
	</tr>
</table>
<br>

<?php
}

# When the user has pressed the yes button and the action is set to "add",
# the user has confirmed the search result and requested that the book
# be added to the database.  In response we write the book's data (basically
# just its ISBN) to the database and get back a unique ID# for it.  We
# display a tag with this ID# so that the user can print it out and attach
# it to the physical book.
elseif (	$_REQUEST['submit'] == $yes_button_label &&
			$_REQUEST['action'] == $add_command &&
			$result_book									)
{
	# 1. Enter the book into the database and get back the primary key
	# autogenerated by the sql insert.
	$id = add_book_to_db($result_book->isbn, $_SESSION['id']);

	# 2. Display the tag the user needs to print out, along with
	# some instructions.
	# *** TODO ***: Should probably do some string validation here.  At
	# the least we should check to be sure that the number is exactly
	# nine digits.
	$id1 = substr($id, 0, 3);
	$id2 = substr($id, 3, 3);
	$id3 = substr($id, 6, 3);
?>
	<div style="text-align:left;">
		Your book has been successfully added to our database.  Now, print out the label
		below, attach it to your book, and leave the book somewhere that others will
		find it.<br/><br/>
	</div>

	<div style="text-align: center; font-size: 16pt; border-style: dashed; border-width: 2px; padding: 5px; width:50%; margin-left:auto; margin-right:auto;">
		This book is free.
		<br/>
		Visit www.wanderingbook.com
		<br/>
		<?php echo $id1 . "-" . $id2 . "-" . $id3; ?>
	</div>
	<br/>
<?php
	# 3. Display a dialog box and map so the user can specify where
	# the book has been left.
?>
	<form style="{ display:inline; }" name="location" method="post"
	 onsubmit="return submitLocation(document.getElementById('lat'), document.getElementById('long'));">
		Next, click on the map below to indicate where you left or will leave this book. &nbsp;&nbsp;
    	<input type="submit" value="Submit &gt;&gt;"/>
		<input id="lat" type="hidden" name="lat"/>
		<input id="long" type="hidden" name="long"/>
		<input type="hidden" name="id" value="<?print $id;?>"/>
		<input type="hidden" name="action" value="<?print $location_command;?>"/>
	</form>
	<br>
	<div id="myMap" class="map"></div>
					
<?php
}

elseif($_REQUEST['action'] == $location_command && $_REQUEST['lat'] && $_REQUEST['long'] && $_REQUEST['id'])
{
	$event_id = event_left($_REQUEST['id'], $_SESSION['id'], $_REQUEST['lat'], $_REQUEST['long']);
?>
		<br>
		<form method="post">
			Where did you leave this book? &nbsp;&nbsp; <input type="submit" value="Next &gt;&gt;"/>
			<br><br>
			<input type="hidden" name="action" value="<?print $description_command;?>"/>
			<input type="hidden" name="event_id" value="<?print $event_id;?>"/>
			<input type="hidden" name="id" value="<?print $_REQUEST['id'];?>"/>
			<textarea style="align:left;" name="body" cols="40" rows="20"></textarea>
		</form>
		<br>
<?php
}

elseif($_REQUEST['action'] == $description_command && $_REQUEST['body'] && $_REQUEST['event_id'] && $_REQUEST['id'])
{
	update_event_body($_REQUEST['event_id'], $_REQUEST['id'], $_REQUEST['body']);

# *** TODO ***: Should put a link back to the profile for logged in users, to somewhere else for non-logged in users.
?>
	Thanks!
<?php
}

# Display the search page.  This is displayed when the user first
# comes to this page, if the search fails, confirmation fails or
# there's some other unspecified error.
else
{
?>

<br/>
<?php
if (!$result_book && $_REQUEST['action'] == $confirm_command)
{
	echo '<div class="error">The ISBN you entered could not be found.</div>';
}
?>
Enter the ISBN number of the book you'd like to add.
<br/>
<br/>

<form action="add_book.php" method="post">
	<input type="hidden" name="action" value="<?php echo $confirm_command;?>"/>
	ISBN: <input name="isbn" type="text"/>
	&nbsp;&nbsp;&nbsp;
	<input type="submit" value="Confirm"/>
</form>

<div style="{ text-align: center; }">
	&lt; insert some instructions on where to find a book's ISBN &gt;
</div>

<?php
}
?>
